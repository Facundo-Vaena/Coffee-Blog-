:root{
    --fuenteHeading: "PT Sans", sans-serif;
    --fuenteParrafos: "Open Sans", sans-serif;

    --primario: #784d3c;
    --gris:#e1e1e1;
    --blanco:#fff;
    --negro:#000;
}
html{
    box-sizing: border-box;
    font-size: 62.5%; /* 1rem = 10px*/
}

*, *:before, *:after{
    box-sizing: inherit;
}

body{
    font-family: var(--fuenteParrafos);
    font-size: 1.6rem;
    line-height: 2;
}

        /*Globales*/
.contenedor{
    width: min(90%, 120rem); /*Es igual a poner "max-width: 120rem; width: 90%;" pero se ocupa menos código. width:min(90%, 120rem) va a elegir
    siempre el menor valor entre los anchos ofrecidos (90%, 120rem). si en pantalla completa hay mas de 120rem, no se va a elegir el 90%
    de la pantalla sino que se va a poner un ancho de 120rem. Si la pantalla es mas pequeña (ej la de un celular) y no hay tantos rem disponibles
    (120), se va a optar por ocupar un ancho del 90% de la pantalla disponible.*/
    margin: 0 auto;
}

a{
    text-decoration: none;
}

h1, h2, h3, h4{
    font-family: var(--fuenteHeading);
    line-height: 1.2;
}

h1{
    font-size: 4.8rem;
}
h2{
    font-size: 4rem;
}
h3{
    font-size: 3.2rem;
}
h4{
    font-size: 2.8rem;
}

img{
    max-width: 100%;
}

    /*Utilidades*/
.no-margin{
    margin: 0;
}
.no-padding{
padding: 0;
}
.centrar-texto{
    text-align: center;
}

    /*Header*/

.webp .header{
    background-image: url(../img/banner.webp);    
}
.no-webp .header{
    background-image: url(../img/banner.jpg);
}

.header{
    background-image: url(../img/banner.jpg);
    height: 60rem;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center; /*Que parte de la img se debe ver siempre
    a pesar del tamaño de la pantalla. Hay doble center ya que se aclara
    eje vertical y horizontal*/
}

.header__texto{
    text-align: center;
    color: var(--blanco);
    margin-top: 5rem;
}
@media (min-width:768px) {
    .header__texto{
        margin-top: 15rem;
    }
}
.barra{
    padding-top: 4rem;
}

@media (min-width:768px) {
    .barra{
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
}

.logo{
    color: var(--blanco);
}
.logo__nombre{
    font-weight: 400;
}
.logo__bold{
font-weight: 700;
}

@media (min-width:768px){
    .navegacion{
        display: flex;
        gap: 2rem;
        
    }
    
}
.navegacion__enlace{
    display: block;
    text-align: center;
    font-size: 1.8rem;
    color: var(--blanco);
}

@media (min-width:768px) {
    .contenido-principal{
        display:grid;
        grid-template-columns: 2fr 1fr;
        column-gap: 4rem;
    }
}

.entrada{
    border-bottom: 1px solid var(--gris);
    margin-bottom: 2rem;
}
.entrada:last-of-type{ /*last-of-type va a referirse al último elemento con la clase ".entrada"*/
    border: none;
    margin-bottom: 0;
}

.boton{
    display: block;
    color: var(--blanco);
    padding: 1rem 3rem;
    text-align: center;
    text-transform: uppercase;
    font-size: 1.8rem;
    font-family: var(--fuenteHeading);
    font-weight: 700;
    margin-bottom: 2rem;
    border: none;
}
@media (min-width:768px) {
    .boton{
        display: inline-block; /*inline solo no respeta ni margin
        ni width. Inline-block sí los respeta, y en lo demas se ve
        como un inline.
        el inline-block ademas no permite ningun elemento al lado del que
        tiene este display ya que em ese sentido funciona como un block (es como si el elemento ocupase todo el espacio disponible). Inline solo toma el espacio que requiere, 
        mientras que block toma todo el espacio disponible.*/
    }
}
.boton:hover{
    cursor: pointer;
}

.boton--primario{
    background-color: var(--negro);    
}
.boton--secundario{
    background-color: var(--primario);
}
.cursos{
    list-style: none;
} /*Para sacarle los puntitos a cada ítem de la lista*/

.widget-curso{
    border-bottom: 1px solid var(--gris);
    margin-bottom: 2rem;
}
.widget-curso:last-of-type{
    border-bottom: none;
    margin-bottom: 0;
}
.widget-curso__label{
    font-family: var(--fuenteHeading);
    font-weight: 700;
}
.widget-curso__info{
    font-weight: 400;
}
.widget-curso__label, .widget-curso__info{
    font-size: 2rem;
}

.footer{
    background-color: var(--negro);
    padding-bottom: 3rem;
    margin-top: 4rem;

}
.footer__navegacion a, .footer__logo h1{
    font-size: 2rem;
}

    /*Nosotros*/

@media (min-width:768px) {
    .sobre-nosotros{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        column-gap: 2rem;
    }
    /* Para no usar gap por poco soporte:
    .sobre-nosotros{
        display: flex;
        justify-content: space-between;
    }
    .sobre-nosotros__texto{
        flex: 0 0 calc(50% - 1rem);
    }
    .sobre-nosotros__imagen{
        flex: 0 0 calc(50% - 1rem);    
    }*/
}

    /*Cursos*/
.curso{
    padding: 3rem 0;
    border-bottom: 1px solid var(--gris);
}

@media (min-width:768px) {
    .curso{
        display: grid;
        grid-template-columns: 1fr 2fr;
        padding: 8rem;
        column-gap: 2rem;
        padding-top: 4rem;
        padding-bottom: 2rem;
    }
    
}

.curso:last-of-type{
    border: none;
}

.curso__label{
    font-family: var(--fuenteHeading);
    font-weight: 700;
}
.curso__info{
    font-weight: 400;
}
.curso__label, .widget-curso__info{
    font-size: 2rem;
}

    /*Contacto*/

.contacto-bg{
    background-image: url(../img/contacto.jpg);
    height: 40rem; /*Si no se le da altura no va a aparecer nunca*/
    background-size: cover;
    background-repeat: no-repeat;
}

.formulario{
    background-color: var(--blanco);
    margin: -5rem auto 0 auto;
    width: 95%;
    padding: 5rem;
}

.campo{
    display: flex;
    margin-bottom: 2rem;
}

.campo__label{
    flex: 0 0 9rem;
    text-align: right;
    padding-right: 2rem;
}
.campo__field{
    flex: 1;
    border: 1px solid var(--gris);
}
/*Como campo label tiene 0 de factor de crecimiento y field
tiene 1, por cada cero px de label, field tendra 1px, lo que 
es igual a decir que label va a ocupar solamente el espacio 
que requiere, y todo el resto de espacio va a ser ocupado por
el field*/

.campo__field--textarea{
    height: 20rem;
}